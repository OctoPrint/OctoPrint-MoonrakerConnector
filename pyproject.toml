[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "OctoPrint-MoonrakerConnector"
version = "0.1.0"
description = "Connector plugin to allow connecting to Moonraker enabled Klipper based printers"
authors = [
    {name = "Gina Häußge", email = "gina@octoprint.org"}
]
readme = {file = "README.md", content-type = "text/markdown"}
dynamic = [
    "license"
]

requires-python = ">=3.9, <4"

# any additional requirements (besides OctoPrint) should be listed here
dependencies = []

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = [
    "octoprint_moonraker_connector",
    "octoprint_moonraker_connector.*"
]

[project.entry-points."octoprint.plugin"]
moonraker_connector = "octoprint_moonraker_connector"

[project.urls]
Homepage = "https://github.com/OctoPrint/OctoPrint-MoonrakerConnector"

[project.optional-dependencies]
develop = [
    "go-task-bin"
]

[tool.ruff]
exclude = [
    # repo specific
    "src/octoprint/vendor",

    # standard stuff
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 90
indent-width = 4
# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
select = ["B", "C", "E", "F", "I", "W", "B9"]
ignore = [
    "E203",
    "E231",
    "E265",
    "E266",
    "E402",
    "E501",
    "E731",
    "E741",
    "W605",
    "C901",
]
fixable = ["I", "C4", "E"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = [
    "octoprint",
    "octoprint_setuptools",
    "octoprint_client",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.djlint]
ignore="H005,H007,H019,H021,H023,H030,H031,T002"
max_blank_lines=1
use_gitignore=true

[tool.codespell]
skip = '*.po,*.min.js,.git,*/vendor/*,*/lib/*,*/bootstrap/*,*/node_modules/*,*/translations/*,*/venv*,*/.*,*/build/*,*/_build/*,setup.cfg,AUTHORS.md'
ignore-words = '.codespell_ignore_words'
quiet-level = 3
count = true
